import csv
import sys
from collections import defaultdict

def get_product_category(product_name):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ –ø–æ –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—é"""
    if '–ö–æ–ª—å—î' in product_name:
        return '–ö–æ–ª—å–µ'
    elif '–°–µ—Ä–µ–∂–∫–∏' in product_name:
        return '–°–µ—Ä—å–≥–∏'
    elif '–ë—Ä–∞—Å–ª–µ—Ç' in product_name:
        return '–ë—Ä–∞—Å–ª–µ—Ç'
    elif '–ö–∞–±–ª—É—á–∫–∞' in product_name:
        return '–ö–æ–ª—å—Ü–æ'
    elif '–ö–∞—Ñ—Ñ' in product_name:
        return '–ö–∞—Ñ—Ñ'
    elif '–ê–Ω–∫–ª–µ—Ç' in product_name:
        return '–ê–Ω–∫–ª–µ—Ç'
    elif '–ß–æ–∫–µ—Ä' in product_name:
        return '–ß–æ–∫–µ—Ä'
    else:
        return '–î—Ä—É–≥–æ–µ'

def analyze_top_upsells_by_category(top_n=10):
    """
    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–æ–ø –¥–æ–ø—Ä–æ–¥–∞–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    
    Args:
        top_n (int): –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–ø —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 10)
    """
    # –ß–∏—Ç–∞–µ–º CSV —Ñ–∞–π–ª
    orders = {}
    with open('products.csv', 'r', encoding='utf-8') as csvfile:
        reader = csv.DictReader(csvfile)
        for row in reader:
            order_id = row['‚Ññ –∑–∞–∫–∞–∑–∞']
            if order_id not in orders:
                orders[order_id] = []
            orders[order_id].append(row)
    
    # –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    category_upsells = defaultdict(lambda: defaultdict(int))  # category -> {product: count}
    total_category_upsells = defaultdict(int)  # category -> total_count
    total_orders_with_upsells = 0
    
    print("–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–æ–ø –¥–æ–ø—Ä–æ–¥–∞–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º...")
    print(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(orders)} –∑–∞–∫–∞–∑–æ–≤")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑
    for order_id, order_data in orders.items():
        # –†–∞–∑–¥–µ–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ã–µ –∏ –¥–æ–ø—Ä–æ–¥–∞–∂–∏
        main_products = []
        upsells = []
        
        for item in order_data:
            doprodazha = item.get('–î–æ–ø—Ä–æ–¥–∞–∂–∞', '')
            if doprodazha == '–î–æ–ø—Ä–æ–¥–∞–∂–∞':
                upsells.append(item)
            else:
                main_products.append(item)
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø—Ä–æ–¥–∞–∂–∏ –≤ –∑–∞–∫–∞–∑–µ
        if upsells:
            has_main_products = False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (–∏—Å–∫–ª—é—á–∞—è —É–ø–∞–∫–æ–≤–∫—É)
            for main_product in main_products:
                main_product_name = main_product['–¢–æ–≤–∞—Ä—ã']
                if not ('–ö–æ—Ä–æ–±–∫–∞' in main_product_name or '–ü–∞–∫–µ—Ç' in main_product_name):
                    has_main_products = True
                    break
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã, —Å—á–∏—Ç–∞–µ–º –¥–æ–ø—Ä–æ–¥–∞–∂–∏
            if has_main_products:
                total_orders_with_upsells += 1
                
                for upsell_product in upsells:
                    upsell_name = upsell_product['–¢–æ–≤–∞—Ä—ã']
                    
                    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–ø–∞–∫–æ–≤–∫—É –≤ –¥–æ–ø—Ä–æ–¥–∞–∂–∞—Ö
                    if '–ö–æ—Ä–æ–±–∫–∞' in upsell_name or '–ü–∞–∫–µ—Ç' in upsell_name:
                        continue
                    
                    upsell_category = get_product_category(upsell_name)
                    category_upsells[upsell_category][upsell_name] += 1
                    total_category_upsells[upsell_category] += 1
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–π CSV
    with open('top_upsells_by_category.csv', 'w', newline='', encoding='utf-8') as csvfile:
        writer = csv.writer(csvfile)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        headers = ['–ö–∞—Ç–µ–≥–æ—Ä–∏—è', '–†–∞–Ω–≥', '–¢–æ–≤–∞—Ä', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ø—Ä–æ–¥–∞–∂', '–î–æ–ª—è –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (%)', '–î–æ–ª—è –æ—Ç –≤—Å–µ—Ö –¥–æ–ø—Ä–æ–¥–∞–∂ (%)']
        writer.writerow(headers)
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ø—Ä–æ–¥–∞–∂
        total_all_upsells = sum(total_category_upsells.values())
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –æ–±—â–µ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –¥–æ–ø—Ä–æ–¥–∞–∂
        sorted_categories = sorted(total_category_upsells.items(), key=lambda x: x[1], reverse=True)
        
        print(f"\n–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"–ó–∞–∫–∞–∑–æ–≤ —Å –¥–æ–ø—Ä–æ–¥–∞–∂–∞–º–∏: {total_orders_with_upsells}")
        print(f"–í—Å–µ–≥–æ –¥–æ–ø—Ä–æ–¥–∞–∂: {total_all_upsells}")
        
        # –î–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤—ã–≤–æ–¥–∏–º —Ç–æ–ø —Ç–æ–≤–∞—Ä–æ–≤
        for category, total_count in sorted_categories:
            print(f"\nüì¶ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category} (–≤—Å–µ–≥–æ –¥–æ–ø—Ä–æ–¥–∞–∂: {total_count})")
            
            # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –¥–æ–ø—Ä–æ–¥–∞–∂
            sorted_products = sorted(category_upsells[category].items(), key=lambda x: x[1], reverse=True)
            
            # –í—ã–≤–æ–¥–∏–º —Ç–æ–ø N —Ç–æ–≤–∞—Ä–æ–≤
            for rank, (product_name, count) in enumerate(sorted_products[:top_n], 1):
                category_percentage = round((count / total_count) * 100, 1) if total_count > 0 else 0
                total_percentage = round((count / total_all_upsells) * 100, 1) if total_all_upsells > 0 else 0
                
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ CSV
                writer.writerow([category, rank, product_name, count, f"{category_percentage}%", f"{total_percentage}%"])
                
                # –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å (—Ç–æ–ª—å–∫–æ —Ç–æ–ø-5 –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏)
                if rank <= 5:
                    print(f"  {rank}. {product_name}: {count} –¥–æ–ø—Ä–æ–¥–∞–∂ ({category_percentage}% –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)")
            
            # –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤ –±–æ–ª—å—à–µ 5, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç—Ç–æ
            if len(sorted_products) > 5:
                print(f"  ... –∏ –µ—â—ë {len(sorted_products) - 5} —Ç–æ–≤–∞—Ä–æ–≤")
    
    # –í—ã–≤–æ–¥–∏–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    print(f"\nüìä –†–µ–π—Ç–∏–Ω–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –¥–æ–ø—Ä–æ–¥–∞–∂:")
    for rank, (category, count) in enumerate(sorted_categories, 1):
        percentage = round((count / total_all_upsells) * 100, 1) if total_all_upsells > 0 else 0
        unique_products = len(category_upsells[category])
        print(f"  {rank}. {category}: {count} –¥–æ–ø—Ä–æ–¥–∞–∂ ({percentage}%, {unique_products} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤)")
    
    print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª 'top_upsells_by_category.csv'")

if __name__ == "__main__":
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    top_n = 10
    
    if len(sys.argv) > 1:
        try:
            top_n = int(sys.argv[1])
            if top_n < 1:
                print("–û—à–∏–±–∫–∞: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0")
                sys.exit(1)
        except ValueError:
            print("–û—à–∏–±–∫–∞: –∞—Ä–≥—É–º–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–ø —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)")
            sys.exit(1)
    
    print(f"–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è —Ç–æ–ø-{top_n} —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    analyze_top_upsells_by_category(top_n)
